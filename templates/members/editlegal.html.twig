{% extends 'base.html.twig' %}

{% block title %}-
	{{app.user.structure.name}}
{% endblock %}

{% block navbar %}
	{% include 'admin/_navbarAdmin.html.twig' %}
{% endblock %}

{% block body %}
	<div class="main_content pt-2">
		<h1 class="h1structure text-left mt-3">{{app.user.structure.name}}</h1>
		<h1>Editer
			{{legalPerson.name}}</h1>
		<div class="d-flex justify-content-start my-4">
			<a class="button button-light me-1 my-4" href="{{ path('members_index') }}">Retour</a>
		</div>
		{{ include('members/_legalform.html.twig', {'button_label': 'Mettre Ã  jour'}) }}
	</div>
{% endblock %}

{% block javascripts %}
	{{ parent() }}
	<script>
		jQuery(document).ready(function () { // Get the ul that holds the collection of tags
var $addressesCollectionHolder = $('ul.addresses');
// count the current form inputs we have (e.g. 2), use that as the new
// index when inserting a new item (e.g. 2)
$addressesCollectionHolder.data('index', $addressesCollectionHolder.find('input').length);

$addressesCollectionHolder.find('li').each(function () {
addTagFormDeleteLink($(this));
});

$('body').on('click', '.add_addresses_link', function (e) {
var $collectionHolderClass = $(e.currentTarget).data('collectionHolderClass');
// add a new tag form (see next code block)
addFormToCollection($collectionHolderClass);
})

function addFormToCollection($collectionHolderClass) { // Get the ul that holds the collection of tags
var $collectionHolder = $('.' + $collectionHolderClass);

// Get the data-prototype explained earlier
var prototype = $collectionHolder.data('prototype');

// get the new index
var index = $collectionHolder.data('index');

var newForm = prototype;
// You need this only if you didn't set 'label' => false in your tags field in TaskType
// Replace '__name__label__' in the prototype's HTML to
// instead be a number based on how many items we have
// newForm = newForm.replace(/__name__label__/g, index);

// Replace '__name__' in the prototype's HTML to
// instead be a number based on how many items we have
newForm = newForm.replace(/__name__/g, index);

// increase the index with one for the next item
$collectionHolder.data('index', index + 1);

// Display the form in the page in an li, before the "Add a tag" link li
var $newFormLi = $('<li></li>').append(newForm);
// Add the new form at the end of the list
$collectionHolder.append($newFormLi)
addTagFormDeleteLink($newFormLi);
}

function addTagFormDeleteLink($tagFormLi) {
var $removeFormButton = $('<button type="button" class="button button-light">Effacer cette adresse</button>');
$tagFormLi.append($removeFormButton);

$removeFormButton.on('click', function (e) { // remove the li for the tag form
$tagFormLi.remove();
});
}
});

function toggleAsso() {
var asso = document.getElementById('associate');
if (asso.style.display == "block") { // if is menuBox displayed, hide it
asso.style.display = "none";
} else { // if is menuBox hidden, display it
asso.style.display = "block";
}
}

function toggleExe() {
var exe = document.getElementById('executive');
if (exe.style.display == "block") { // if is menuBox displayed, hide it
exe.style.display = "none";
} else { // if is menuBox hidden, display it
exe.style.display = "block";
}
}

function toggleOther() {
var other = document.getElementById('otherParticipant');
if (other.style.display == "block") { // if is menuBox displayed, hide it
other.style.display = "none";
} else { // if is menuBox hidden, display it
other.style.display = "block";
}
}
	</script>
{% endblock %}
